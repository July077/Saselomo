<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->

<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->

<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="off">
	<!--先定义所有的appender-->
	<appenders>
		<!--这个输出控制台的配置-->
		<Console name="Console" target="SYSTEM_OUT">
			<!--输出日志的格式-->
			<!--  %p 输出优先级； %t 输出产生该日志事件的线程名；%c 输出所属的类目，通常就是所在类的全名；%m 输出代码中       指定的消息；%n 输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n”。 -->
			<!-- <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" /> -->
			<PatternLayout pattern="[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%m%n"/> 
		</Console>
		<!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFile" fileName="logs/TraceLog.log"
           filePattern="logs/$${date:yyyy-MM}/log-%d{MM-dd-yyyy}-%i.log">
            <!-- <PatternLayout pattern="%d{dd MMM yyyy HH\:mm\:ss.SSS} [%p] [%t] [%c] %m%n"/> -->
            <PatternLayout pattern="[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%m%n"/>
            <SizeBasedTriggeringPolicy size="5M"/>
        </RollingFile>
	</appenders>
	<loggers>
		<root level="ERROR">
			<appender-ref ref="Console" />
			<!-- 写入到文件 -->
			<appender-ref ref="RollingFile"/>
		</root>
	</loggers>
</configuration>
